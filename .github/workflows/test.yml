name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Add timeout to prevent hanging builds

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup npm cache
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Clean install dependencies
      run: |
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --no-fund --no-audit --legacy-peer-deps --prefer-offline --no-optional
      
    - name: Create jest.setup.js if missing
      run: |
        if [ ! -f jest.setup.js ]; then
          echo "require('@testing-library/jest-dom');" > jest.setup.js
        fi
    
    - name: Run tests
      run: npx jest --passWithNoTests --forceExit
      env:
        CI: true
      
    - name: Run tests with coverage
      run: npx jest --coverage --passWithNoTests --forceExit
      env:
        CI: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/
        fail_ci_if_error: false
